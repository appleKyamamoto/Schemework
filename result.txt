課題1
その１
> (map-tree even? TREE)
(#f (#t (#f #t)) #t (#f #t #f))
> (map-tree (lambda(x)(* x x)) TREE)
(1 (4 (9 16)) 36 (49 64 81))
> (map-tree even? TREE2)
(#f #t ((#f #t) #f) (#t (#f #t #f)))
> (map-tree (lambda(x)(* x x)) TREE2)
(1 4 ((9 16) 25) (36 (49 64 81)))
その2
> (map-tree2 even? TREE)
(#f (#t (#f #t)) #t (#f #t #f))
> (map-tree2 (lambda(x)(* x x)) TREE)
(1 (4 (9 16)) 36 (49 64 81))
> (map-tree2 even? TREE2)
(#f #t ((#f #t) #f) (#t (#f #t #f)))
> (map-tree2 (lambda(x)(* x x)) TREE2)
(1 4 ((9 16) 25) (36 (49 64 81)))
課題2
家系図
> kakeizu
(家康 (義直 (光友 (綱誠))) (秀忠 (家光 (綱吉) (綱重 (家宣 (家継))) (家綱))) (頼宣 (光貞 (綱教) (頼職) (吉宗 (宗尹 (治済 (家斎 (家慶 (家定) (慶昌)) (斎順 (家茂)) (斎壮 (昌丸))) (斎敦 (斎礼)) (斎匡 (斎位) (慶寿) (慶頼 (家達)) (慶永)))) (家重 (家治) (重好)) (宗武 (治察) (定国) (定信))))) (頼房 (頼重 (綱条) (頼候)) (光圀)))
その1
> (get-depth kakeizu 1)
(義直 秀忠 頼宣 頼房)
> (get-depth kakeizu 3)
(綱誠 綱吉 綱重 家綱 綱教 頼職 吉宗 綱条 頼候)
> (get-depth kakeizu 6)
(家斎 斎敦 斎匡)
自分
> (get-depth kakeizu 5)
(家継 治済 家治 重好 治察 定国 定信)
その２
> (get-cousin kakeizu '秀忠)
(義直 秀忠 頼宣 頼房)
> (get-cousin kakeizu '吉宗)
(綱誠 綱吉 綱重 家綱 綱教 頼職 吉宗 綱条 頼候)
> (get-cousin kakeizu '家継)
(家継 治済 家治 重好 治察 定国 定信)
自分
> (get-cousin kakeizu '重好)
(家継 治済 家治 重好 治察 定国 定信)
その3
> (get-path kakeizu '家光)
(家康 秀忠 家光)
> (get-path kakeizu '家治)
(家康 頼宣 光貞 吉宗 家重 家治)
> (get-path kakeizu '家慶)
(家康 頼宣 光貞 吉宗 宗尹 治済 家斎 家慶)
自分
> (get-path kakeizu '家達)
(家康 頼宣 光貞 吉宗 宗尹 治済 斎匡 慶頼 家達)
課題3
その1
> (diff 'x)
1
> (diff '(+ x 5))
(+ 1 0)
> (diff '(+ (** x 2) (- (* 4 x) 3))) 
(+ (* 2 (* 1 (** x 1))) (- (+ (* 4 1) (* 0 x)) 0))
自分
> (diff '(+ (* 2 (** x 2)) (- (* 2 x) 1)))
(+ (+ (* 2 (* 2 (* 1 (** x 1)))) (* 0 (** x 2))) (- (+ (* 2 1) (* 0 x)) 0))
その2
> (tangent '(+ (** x 3) (* -2 (** x 2)) 9) 2)
(+ (* 4 x) 1)
自分
> (tangent '(+ (* 2 (** x 2)) (- (* 2 x) 1)) 2)
(+ (* 10 x) -9)
その3
> (diff2 'x 'x)
1
> (diff2 'y 'x)
0
> (diff2 '(* x y) 'x)
(+ (* x 0) (* 1 y))
自分
> (diff2 '(* (** y 2) (** x 2)) 'y)
(+ (* (** y 2) (* 2 (* 0 (** x 1)))) (* (* 2 (* 1 (** y 1))) (** x 2)))
> (diff2 '(* (** y 2) (** x 2)) 'x)
(+ (* (** y 2) (* 2 (* 1 (** x 1)))) (* (* 2 (* 0 (** y 1))) (** x 2)))
その4
> (simple (diff '(+ x 3)))
1
> (simple (diff '(+ (** x 2) (* 4 x) 5))) 
(+ (* 2 x) 4)
自分
> (simple (diff '(+ (* 2 (** x 2)) (- (* 2 x) 1))))
(+ (* 2 (* 2 x)) 2)
